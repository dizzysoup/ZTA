version: '3.4'

networks: 
  kong-net:
    driver: bridge
    name : kong-net
  keycloak-net:
    name : keycloak-net
  fontend-net:
    name : fontend-net

volumes:
  kong-datastore:
  keycloak-datastore:

services:
  kong-db:
    image: postgres:11-alpine
    container_name: kong_db
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong

  kong:
    build:
      context: ./      
    image: kong-oidc:latest
    container_name: kong
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug

  konga:
    image: pantsel/konga:0.14.9
    container_name: konga
    depends_on:
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development

  keycloak-db:
    image: postgres:14-alpine
    container_name: keycloak_db
    volumes: 
      - keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "25432:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:17.0.0
    container_name: keycloak
    depends_on:
      - keycloak-db
    command: start-dev
    networks:
      - keycloak-net
    ports:
      - "8180:8080"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     keycloak-db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN:     admin
      KEYCLOAK_ADMIN_PASSWORD: admin
  
  nginxproxyserver:
    container_name: nginxproxyserver
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    networks:
      - fontend-net
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
  frontend:
    container_name: login-protocol
    networks:
      - fontend-net
    build:
      context: . 
      dockerfile: ./login-protocol/Dockerfile
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./login-protocol:/app
      - ./login-protocol/node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - WDS_SOCKET_PORT=0
      - NODE_ENV=development
      - PORT=3000
    command: ["npm", "run", "start"]
  
